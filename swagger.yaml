swagger: '2.0'
info:
  version: '1.0'
  title: "kptm-tools"
  description: Core microservice
  license:
    name: MIT
    url: https://github.com/apiaryio/polls-api/blob/master/LICENSE
host: polls.apiblueprint.org
basePath: /
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  /auth/me:
    x-summary: Get info from a user
    get:
      summary: Get info from user
          
      responses:
        200:
          description: Successful Response
          schema:
            $ref: "#/definitions/UserResponse"
  /auth/register:
    x-summary: Register a user
    post:
      summary: Register a user
      parameters:
        - name: body
          in: body
          description: Data of user
          schema: 
            $ref: "#/definitions/UserRequest"
          required: true
          
      responses:
        200:
          description: Successful Response
          schema:
            type: string
            example: Sucessful Operation
  /auth/login:
    x-summary: Authenticates a user
    post:
      summary: Login a user
      parameters:
        - name: body
          in: body
          description: Receives a LoginRequest that can be with password or using third partner. 
          schema: 
            $ref: "#/definitions/LoginRequest"
      responses:
        200:
          description: Successful Response
          schema:
            $ref: "#/definitions/LoginResponse"
            
  /targets:
    x-summary: Targets collection
    post:
      summary: Register a target
      parameters:
        - name: body
          in: body
          description: Takes in header token that contains id of user so we know to which user correspond the target
          schema: 
            $ref: "#/definitions/DomainRequest"
          required: true
        - name: Authorization
          in: header
          description: an authorization header
          required: true
          type: string
          
      responses:
        200:
          description: Successful Response
          schema:
            $ref: "#/definitions/DomainResponse"  
    get:
      summary: Obtains all targets 
      parameters:
        - name: Authorization
          in: header
          description: an authorization header
          required: true
          type: string
      responses:
        200:
          description: Successful Response
          schema:
            type: array
            items:
              - $ref: "#/definitions/DomainResponse"
            
    patch:
      summary: Modify a list of targets    
      parameters:
        - name: Authorization
          in: header
          description: an authorization header
          required: true
          type: string
        - name: body
          in: body
          description: An array of target Request 
          schema: 
            type: array
            items:
              - $ref: "#/definitions/DomainRequest"
          required: true
  
      responses:
        200:
          description: Successful Response
          schema:
            type: string
            example: Done
            
  /targets/{id}:
    x-summary: Delete a target
    delete:
      summary: Delete a target
      parameters:
        - name: id
          in: path
          description: Id of target
          type: string
          x-example: 1
          required: true
        - name: Authorization
          in: header
          description: an authorization header
          required: true
          type: string
      responses:
        200:
          description: Successful Response
          schema:
            type: string
            example: Done
            
  /targets/{id}/validate:
    x-summary: Validate target that can be IP or domain
    delete:
      summary: Validate target
      parameters:
        - name: id
          in: path
          description: Id of target
          type: string
          x-example: 
          required: true
        - name: Authorization
          in: header
          description: an authorization header
          required: true
          type: string
      responses:
        200:
          description: Successful Response
          schema:
            $ref: "#/definitions/ValidateResponse"
  /scanner:
    x-summary: Operations related to scanning
    get:
      summary: Obtains all scannings done by the user
      parameters:
        - name: Authorization
          in: header
          description: an authorization header
          required: true
          type: string
      responses:
        200:
          description: Successful Response
          schema:
            $ref: "#/definitions/ScanGeneralResponse"
    post: 
      summary: Create a scanning for a given set of targets and outputs an id of the scanning
      parameters:
        - name: Authorization
          in: header
          description: an authorization header
          required: true
          type: string
        - name: body
          in: body
          description: Body where is specified the list of id targets and possible schedule 
          required: true
          schema:
            $ref: "#/definitions/ScanRequest"
      responses:
        200:
          description: Successful Response
          schema:
            type: object
            properties:
              id: 
                type: string
  /scanner/{id}:
    x-summary: Operations related to specific scanning
    get:
      summary: Obtains results of a given scanning
      parameters:
        - name: id
          in: path
          description: Id of scannig
          type: string
          x-example: 
          required: true
        - name: Authorization
          in: header
          description: an authorization header
          required: true
          type: string
      responses:
        200:
          description: Successful Response
          schema:
            $ref: "#/definitions/ScannerResponse"
    patch:
      summary: Add comments in the result of scanning
      parameters:
        - name: id
          in: path
          description: Id of scannig
          type: string
          x-example: 
          required: true
        - name: body
          in: body
          description: Contains the DTO Request for adding comments
          required: true
          schema:
            $ref: "#/definitions/ScanPatchRequest"
        - name: Authorization
          in: header
          description: an authorization header
          required: true
          type: string
      responses:
        200:
          description: Successful Response
          schema:
            type: string
            example: Done
    
    delete:
      summary: Delete scan
      parameters:
        - name: id
          in: path
          description: Id of scannig
          type: string
          x-example: 
          required: true
        - name: Authorization
          in: header
          description: an authorization header
          required: true
          type: string
      responses:
        200:
          description: Successful Response
          schema:
            type: string
            example: Done  
  
  /reports:
    x-summary: Generate reports for user
    post:
      summary: Return a report of findings obtained from the vulnerabilities and gathered information
      parameters:
        - name: Authorization
          in: header
          description: an authorization header
          required: true
          type: string
        - name: body
          in: body
          description: Contains the periodicity of the request
          required: true
          schema:
            $ref: "#/definitions/ReportRequest"
      responses:
        200:
          description: Successful Response
          schema:
            type: string
            example: http://bucket/file
    
definitions:
  UserRequest:
    title: Information from user
    type: object
    properties:
      documentIdentifier:
        type: string
      name:
        type: string
      roleId:
        type: string
      notificationURL:
        type: string
      notificationEmail:
        type: string
    required:
      - documentIdentifier
      - name
      - roleId
  LoginResponse:
    title: Login Response
    type: object
    properties:
      status:
        type: boolean
      data:
        type: object
        properties:
          id:
            type: string
          name:
            type: string
          roleId:
            type: string
          access_token:
            type: string
        

  LoginRequest:
    title: Login Request
    type: object
    properties:
      email: 
        type: string
      password:
        type: string
      googleId:
        type: string
      githubId:
        type: string
        
  UserResponse:
    title: User Response
    type: object
    properties:
      name:
        type: string
      role:
        type: string
  
  DomainRequest:
    title: Target Request
    type: object
    properties:
      name:
        type: string
        example: www.google.com
        
  DomainResponse:
    title: Target Response
    type: object
    properties:
      id: 
        type: string
        example: 1
      name:
        type: string
        example: www.google.com
  
  ValidateResponse:
    title: Validation of Target Response
    type: object
    properties:
      isValid: 
        type: boolean
        example: true
      reason:
        type: string
        example: It appears in DNS
  ReportRequest:
    title: Report Request
    type: object
    properties:
      period:
        type: string
      scans:
        type: array
        items:
          type: string
  
  ScanPatchRequest:
    title: Request for Scan Patch
    type: object
    properties:
      commentGeneral: 
        type: string
      comments:
        type: array
        items:
          type: object
          properties:
            toolId: 
              type: string
            comment:
              type: string
  ScannerResponse:
    title: Scanner Response DTO
    type: object
    properties:
      tool:
        type: string
      failure: 
        type: string
      failuresDetail:
        type: array
        items:
          type: object
          properties:
            vulnerabilityName:
              type: string
            severity:
              type: string
            description:
              type: string
            affectedAsset:
              type: string
            additionalReference:
              type: string
  ScanRequest:
    title: Scan
    type: object
    properties:
      targets:
        type: array
        items:
          type: string
      schedule:
        type: string
  ScanGeneralResponse:
    title: Scan General Response
    type: array
    items:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        dateStart:
          type: string
        dateFinishScan:
          type: string
        commentGeneral:
          type: string
        numberVulnerabilities:
          type: number